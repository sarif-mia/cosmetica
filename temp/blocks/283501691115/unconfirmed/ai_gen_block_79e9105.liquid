{% doc %}
  @prompt
    hi need a create section reels section 
    
    all devices responsive hobe amik contro korte parbo sob kisui 
    
    reels er ncihe center e product add korte parbo badge akare thakbe auto play thakbe , pls creatr fully professional]
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-reels-section-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-reels-container-{{ ai_gen_id }} {
    max-width: {{ block.settings.container_width }}px;
    margin: 0 auto;
    padding: 0 {{ block.settings.mobile_padding }}px;
  }

  .ai-reels-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.desktop_columns }}, 1fr);
    gap: {{ block.settings.gap }}px;
    margin-bottom: {{ block.settings.spacing_below_reels }}px;
  }

  .ai-reel-item-{{ ai_gen_id }} {
    position: relative;
    border-radius: {{ block.settings.reel_border_radius }}px;
    overflow: hidden;
    background-color: #000;
    aspect-ratio: 9 / 16;
  }

  .ai-reel-video-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-reel-overlay-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: {{ block.settings.overlay_padding }}px;
    background: linear-gradient(to top, rgba(0, 0, 0, {{ block.settings.overlay_opacity }}), transparent);
    color: {{ block.settings.overlay_text_color }};
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .ai-reel-item-{{ ai_gen_id }}:hover .ai-reel-overlay-{{ ai_gen_id }} {
    opacity: 1;
  }

  .ai-reel-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: 600;
    margin: 0 0 8px;
  }

  .ai-reel-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_font_size }}px;
    margin: 0;
    line-height: 1.4;
  }

  .ai-reel-play-button-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: {{ block.settings.play_button_size }}px;
    height: {{ block.settings.play_button_size }}px;
    background-color: {{ block.settings.play_button_color }};
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.3s ease, opacity 0.3s ease;
    opacity: {{ block.settings.play_button_opacity }};
    pointer-events: none;
  }

  .ai-reel-item-{{ ai_gen_id }}:hover .ai-reel-play-button-{{ ai_gen_id }} {
    transform: translate(-50%, -50%) scale(1.1);
  }

  .ai-reel-play-button-{{ ai_gen_id }} svg {
    width: 50%;
    height: 50%;
    fill: {{ block.settings.play_button_icon_color }};
    margin-left: 4px;
  }

  .ai-reel-item-{{ ai_gen_id }}.playing .ai-reel-play-button-{{ ai_gen_id }} {
    opacity: 0;
  }

  .ai-products-wrapper-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: {{ block.settings.product_gap }}px;
    flex-wrap: wrap;
  }

  .ai-product-badge-{{ ai_gen_id }} {
    position: relative;
    width: {{ block.settings.badge_size }}px;
    height: {{ block.settings.badge_size }}px;
    border-radius: 50%;
    overflow: hidden;
    border: {{ block.settings.badge_border_width }}px solid {{ block.settings.badge_border_color }};
    background-color: {{ block.settings.badge_background }};
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .ai-product-badge-{{ ai_gen_id }}:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .ai-product-badge-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-product-badge-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f4f4f4;
  }

  .ai-product-badge-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
  }

  .ai-product-tooltip-{{ ai_gen_id }} {
    position: absolute;
    bottom: calc(100% + 10px);
    left: 50%;
    transform: translateX(-50%);
    background-color: {{ block.settings.tooltip_background }};
    color: {{ block.settings.tooltip_text_color }};
    padding: 12px 16px;
    border-radius: {{ block.settings.tooltip_border_radius }}px;
    white-space: nowrap;
    font-size: {{ block.settings.tooltip_font_size }}px;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    pointer-events: none;
    z-index: 10;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .ai-product-tooltip-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 6px solid transparent;
    border-top-color: {{ block.settings.tooltip_background }};
  }

  .ai-product-badge-{{ ai_gen_id }}:hover .ai-product-tooltip-{{ ai_gen_id }} {
    opacity: 1;
    visibility: visible;
  }

  .ai-empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-empty-state-{{ ai_gen_id }} h3 {
    font-size: 20px;
    margin: 0 0 8px;
    color: #333;
  }

  .ai-empty-state-{{ ai_gen_id }} p {
    font-size: 14px;
    margin: 0;
  }

  @media screen and (max-width: 989px) {
    .ai-reels-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.tablet_columns }}, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-reels-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.mobile_columns }}, 1fr);
    }

    .ai-reel-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_font_size | times: 0.9 }}px;
    }

    .ai-reel-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_font_size | times: 0.9 }}px;
    }

    .ai-product-badge-{{ ai_gen_id }} {
      width: {{ block.settings.badge_size | times: 0.85 }}px;
      height: {{ block.settings.badge_size | times: 0.85 }}px;
    }
  }
{% endstyle %}

<reels-section-{{ ai_gen_id }} class="ai-reels-section-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-reels-container-{{ ai_gen_id }}">
    {% assign has_reels = false %}
    {% for i in (1..6) %}
      {% assign video_key = 'reel_video_' | append: i %}
      {% if block.settings[video_key] != blank %}
        {% assign has_reels = true %}
        {% break %}
      {% endif %}
    {% endfor %}

    {% if has_reels %}
      <div class="ai-reels-grid-{{ ai_gen_id }}">
        {% for i in (1..6) %}
          {% assign video_key = 'reel_video_' | append: i %}
          {% assign title_key = 'reel_title_' | append: i %}
          {% assign description_key = 'reel_description_' | append: i %}
          
          {% if block.settings[video_key] != blank %}
            <div class="ai-reel-item-{{ ai_gen_id }}" data-reel-index="{{ i }}">
              <video
                class="ai-reel-video-{{ ai_gen_id }}"
                src="{{ block.settings[video_key] }}"
                loop
                muted
                playsinline
                {% if block.settings.autoplay %}autoplay{% endif %}
              ></video>
              
              <div class="ai-reel-play-button-{{ ai_gen_id }}">
                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </div>

              {% if block.settings[title_key] != blank or block.settings[description_key] != blank %}
                <div class="ai-reel-overlay-{{ ai_gen_id }}">
                  {% if block.settings[title_key] != blank %}
                    <h3 class="ai-reel-title-{{ ai_gen_id }}">{{ block.settings[title_key] }}</h3>
                  {% endif %}
                  {% if block.settings[description_key] != blank %}
                    <p class="ai-reel-description-{{ ai_gen_id }}">{{ block.settings[description_key] }}</p>
                  {% endif %}
                </div>
              {% endif %}
            </div>
          {% endif %}
        {% endfor %}
      </div>

      <div class="ai-products-wrapper-{{ ai_gen_id }}">
        {% for i in (1..6) %}
          {% assign product_key = 'product_' | append: i %}
          {% assign product = block.settings[product_key] %}
          
          {% if product != blank %}
            <a href="{{ product.url }}" class="ai-product-badge-{{ ai_gen_id }}">
              {% if product.featured_image %}
                <img
                  src="{{ product.featured_image | image_url: width: 200 }}"
                  alt="{{ product.featured_image.alt | escape }}"
                  class="ai-product-badge-image-{{ ai_gen_id }}"
                  loading="lazy"
                  width="200"
                  height="200"
                >
              {% else %}
                <div class="ai-product-badge-placeholder-{{ ai_gen_id }}">
                  {{ 'product-1' | placeholder_svg_tag }}
                </div>
              {% endif %}
              
              {% if block.settings.show_tooltip %}
                <div class="ai-product-tooltip-{{ ai_gen_id }}">
                  {{ product.title }}
                </div>
              {% endif %}
            </a>
          {% endif %}
        {% endfor %}
      </div>
    {% else %}
      <div class="ai-empty-state-{{ ai_gen_id }}">
        <h3>Add your reels</h3>
        <p>Upload videos to create an engaging reels section</p>
      </div>
    {% endif %}
  </div>
</reels-section-{{ ai_gen_id }}>

<script>
  (function() {
    class ReelsSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.reels = [];
        this.autoplay = {{ block.settings.autoplay | json }};
      }

      connectedCallback() {
        this.reels = this.querySelectorAll('.ai-reel-item-{{ ai_gen_id }}');
        this.setupVideoControls();
        this.setupIntersectionObserver();
      }

      setupVideoControls() {
        this.reels.forEach((reel) => {
          const video = reel.querySelector('.ai-reel-video-{{ ai_gen_id }}');
          const playButton = reel.querySelector('.ai-reel-play-button-{{ ai_gen_id }}');

          if (!video) return;

          reel.addEventListener('click', () => {
            if (video.paused) {
              this.pauseAllVideos();
              video.play();
              reel.classList.add('playing');
            } else {
              video.pause();
              reel.classList.remove('playing');
            }
          });

          video.addEventListener('play', () => {
            reel.classList.add('playing');
          });

          video.addEventListener('pause', () => {
            reel.classList.remove('playing');
          });

          video.addEventListener('ended', () => {
            reel.classList.remove('playing');
          });
        });
      }

      setupIntersectionObserver() {
        if (!this.autoplay) return;

        const options = {
          root: null,
          rootMargin: '0px',
          threshold: 0.5
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            const video = entry.target.querySelector('.ai-reel-video-{{ ai_gen_id }}');
            if (!video) return;

            if (entry.isIntersecting) {
              video.play().catch(() => {});
            } else {
              video.pause();
            }
          });
        }, options);

        this.reels.forEach((reel) => {
          observer.observe(reel);
        });
      }

      pauseAllVideos() {
        this.reels.forEach((reel) => {
          const video = reel.querySelector('.ai-reel-video-{{ ai_gen_id }}');
          if (video && !video.paused) {
            video.pause();
            reel.classList.remove('playing');
          }
        });
      }
    }

    customElements.define('reels-section-{{ ai_gen_id }}', ReelsSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Reels section",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 600,
      "max": 1600,
      "step": 100,
      "unit": "px",
      "label": "Container width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "mobile_padding",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Mobile side padding",
      "default": 16
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Grid settings"
    },
    {
      "type": "range",
      "id": "desktop_columns",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Desktop columns",
      "default": 3
    },
    {
      "type": "range",
      "id": "tablet_columns",
      "min": 1,
      "max": 4,
      "step": 1,
      "label": "Tablet columns",
      "default": 2
    },
    {
      "type": "select",
      "id": "mobile_columns",
      "label": "Mobile columns",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between reels",
      "default": 16
    },
    {
      "type": "range",
      "id": "spacing_below_reels",
      "min": 0,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Space below reels",
      "default": 32
    },
    {
      "type": "header",
      "content": "Reel style"
    },
    {
      "type": "range",
      "id": "reel_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 12
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto play videos",
      "default": true
    },
    {
      "type": "header",
      "content": "Play button"
    },
    {
      "type": "range",
      "id": "play_button_size",
      "min": 40,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Size",
      "default": 60
    },
    {
      "type": "color",
      "id": "play_button_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "play_button_icon_color",
      "label": "Icon color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "play_button_opacity",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "label": "Opacity",
      "default": 0.8
    },
    {
      "type": "header",
      "content": "Overlay"
    },
    {
      "type": "range",
      "id": "overlay_padding",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "label": "Background opacity",
      "default": 0.7
    },
    {
      "type": "color",
      "id": "overlay_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 10,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Product badges"
    },
    {
      "type": "range",
      "id": "badge_size",
      "min": 40,
      "max": 120,
      "step": 5,
      "unit": "px",
      "label": "Badge size",
      "default": 80
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between badges",
      "default": 16
    },
    {
      "type": "range",
      "id": "badge_border_width",
      "min": 0,
      "max": 6,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 3
    },
    {
      "type": "color",
      "id": "badge_border_color",
      "label": "Border color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "badge_background",
      "label": "Background color",
      "default": "#f4f4f4"
    },
    {
      "type": "header",
      "content": "Tooltip"
    },
    {
      "type": "checkbox",
      "id": "show_tooltip",
      "label": "Show product name on hover",
      "default": true
    },
    {
      "type": "color",
      "id": "tooltip_background",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "tooltip_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "tooltip_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 6
    },
    {
      "type": "range",
      "id": "tooltip_font_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 13
    },
    {
      "type": "header",
      "content": "Reel 1"
    },
    {
      "type": "video_url",
      "id": "reel_video_1",
      "label": "Video",
      "accept": ["youtube", "vimeo"]
    },
    {
      "type": "text",
      "id": "reel_title_1",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "reel_description_1",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Reel 2"
    },
    {
      "type": "video_url",
      "id": "reel_video_2",
      "label": "Video",
      "accept": ["youtube", "vimeo"]
    },
    {
      "type": "text",
      "id": "reel_title_2",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "reel_description_2",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Reel 3"
    },
    {
      "type": "video_url",
      "id": "reel_video_3",
      "label": "Video",
      "accept": ["youtube", "vimeo"]
    },
    {
      "type": "text",
      "id": "reel_title_3",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "reel_description_3",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Reel 4"
    },
    {
      "type": "video_url",
      "id": "reel_video_4",
      "label": "Video",
      "accept": ["youtube", "vimeo"]
    },
    {
      "type": "text",
      "id": "reel_title_4",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "reel_description_4",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Reel 5"
    },
    {
      "type": "video_url",
      "id": "reel_video_5",
      "label": "Video",
      "accept": ["youtube", "vimeo"]
    },
    {
      "type": "text",
      "id": "reel_title_5",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "reel_description_5",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Reel 6"
    },
    {
      "type": "video_url",
      "id": "reel_video_6",
      "label": "Video",
      "accept": ["youtube", "vimeo"]
    },
    {
      "type": "text",
      "id": "reel_title_6",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "reel_description_6",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Products"
    },
    {
      "type": "product",
      "id": "product_1",
      "label": "Product 1"
    },
    {
      "type": "product",
      "id": "product_2",
      "label": "Product 2"
    },
    {
      "type": "product",
      "id": "product_3",
      "label": "Product 3"
    },
    {
      "type": "product",
      "id": "product_4",
      "label": "Product 4"
    },
    {
      "type": "product",
      "id": "product_5",
      "label": "Product 5"
    },
    {
      "type": "product",
      "id": "product_6",
      "label": "Product 6"
    }
  ],
  "presets": [
    {
      "name": "Reels section"
    }
  ]
}
{% endschema %}
